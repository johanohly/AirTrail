openapi: 3.1.0
info:
  title: "AirTrail"
  description: "The AirTrail API allows you to access your flights using external tools."
  version: "0.1"
servers:
  - url: "<YOUR_AIRTRAIL_INSTANCE>/api"
    description: "The API is running at `/api` of your AirTrail instance."
paths:
  /flight/save:
    post:
      tags:
        - "Flight"
      summary: "Create or update a flight"
      description: "Create a new flight or update an existing one. If the `id` field is present, the flight will be updated. Otherwise, a new flight will be created."
      operationId: "save-flight"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/CreateFlight"
                  title: "Create"
                - $ref: "#/components/schemas/UpdateFlight"
                  title: "Update"
      responses:
        '200':
          description: "Flight saved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        '400':
          description: "Invalid request body"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: string
                    description: "The list of validation errors."
        '401':
          '$ref': "#/components/responses/401"
        '500':
          '$ref': "#/components/responses/500"
      security:
        -
          bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: "Go to `Settings` -> `Security` and create a new API key. Use the generated key as the bearer token."

  schemas:
    Success:
      type: object
      properties:
        success:
          type: boolean
          example: true
    CreateFlight:
      type: object
      required:
        - from
        - to
        - departure
        - seats
      properties:
        from:
          type: string
          description: "The ICAO code of the departure airport."
          example: "KJFK"
        to:
          type: string
          description: "The ICAO code of the arrival airport."
          example: "EGLL"
        departure:
          type: string
          description: "The departure date, in ISO 8601 format."
          format: date-time
          example: "2022-01-01T00:00:00Z"
        departureTime:
          type: string
          description: "The departure time in local airport time. 24- and 12-hour formats are supported."
          example: "11:30"
        arrival:
          type: string
          description: "The arrival date, in ISO 8601 format."
          format: date-time
          example: "2022-01-01T00:00:00Z"
        arrivalTime:
          type: string
          description: "The arrival time in local airport time. 24- and 12-hour formats are supported."
          example: "15:30"
        seats:
          type: array
          description: "The seats on the flight. Each seat must have either a `userId` or a `guestName`, and at least one seat must have a `userId`."
          items:
            type: object
            description: "A seat on the flight."
            properties:
              userId:
                type: string
                default: "<USER_ID>"
                nullable: true
                description: "The ID of the user whose seat it is. Set to `<USER_ID>` to assign the seat to yourself."
              guestName:
                type: string
                default: null
                nullable: true
                description: "The name of the guest if the seat is not assigned to a user."
              seat:
                type: string
                description: "The seat type."
                enum:
                  - "aisle"
                  - "window"
                  - "middle"
                  - "other"
              seatNumber:
                type: string
                description: "The seat number."
                example: "1A"
              seatClass:
                type: string
                description: "The class of the seat."
                enum:
                  - "economy"
                  - "economy+"
                  - "business"
                  - "first"
                  - "private"
        airline:
          type: string
          description: "The ICAO code of the airline."
          example: "BAW"
        flightNumber:
          type: string
          description: "The flight number."
          example: "BA178"
        aircraft:
          type: string
          description: "The ICAO code of the aircraft."
          example: "A388"
        aircraftReg:
          type: string
          description: "The registration of the aircraft."
          example: "G-VIIL"
        flightReason:
          type: string
          description: "The reason for the flight."
          enum:
            - "leisure"
            - "business"
            - "crew"
            - "other"
        notes:
          type: string
          description: "Additional notes about the flight."
          example: "This is a test flight."
    UpdateFlight:
      description: "Partial updates are not supported. All fields must be provided."
      type: object
      required:
        - id
        - from
        - to
        - departure
        - seats
      properties:
        id:
          type: number
          description: "The ID of the flight to update."
        from:
          type: string
          description: "The ICAO code of the departure airport."
          example: "KJFK"
        to:
          type: string
          description: "The ICAO code of the arrival airport."
          example: "EGLL"
        departure:
          type: string
          description: "The departure date, in ISO 8601 format."
          format: date-time
          example: "2022-01-01T00:00:00Z"
        departureTime:
          type: string
          description: "The departure time in local airport time. 24- and 12-hour formats are supported."
          example: "11:30"
        arrival:
          type: string
          description: "The arrival date, in ISO 8601 format."
          format: date-time
          example: "2022-01-01T00:00:00Z"
        arrivalTime:
          type: string
          description: "The arrival time in local airport time. 24- and 12-hour formats are supported."
          example: "15:30"
        seats:
          type: array
          description: "The seats on the flight. Each seat must have either a `userId` or a `guestName`, and at least one seat must have a `userId`."
          items:
            type: object
            description: "A seat on the flight."
            properties:
              userId:
                type: string
                default: "<USER_ID>"
                nullable: true
                description: "The ID of the user whose seat it is. Set to `<USER_ID>` to assign the seat to yourself."
              guestName:
                type: string
                default: null
                nullable: true
                description: "The name of the guest if the seat is not assigned to a user."
              seat:
                type: string
                description: "The seat type."
                enum:
                  - "aisle"
                  - "window"
                  - "middle"
                  - "other"
              seatNumber:
                type: string
                description: "The seat number."
                example: "1A"
              seatClass:
                type: string
                description: "The class of the seat."
                enum:
                  - "economy"
                  - "economy+"
                  - "business"
                  - "first"
                  - "private"
        airline:
          type: string
          description: "The ICAO code of the airline."
          example: "BAW"
        flightNumber:
          type: string
          description: "The flight number."
          example: "BA178"
        aircraft:
          type: string
          description: "The ICAO code of the aircraft."
          example: "A388"
        aircraftReg:
          type: string
          description: "The registration of the aircraft."
          example: "G-VIIL"
        flightReason:
          type: string
          description: "The reason for the flight."
          enum:
            - "leisure"
            - "business"
            - "crew"
            - "other"
        notes:
          type: string
          description: "Additional notes about the flight."
          example: "This is a test flight."
  responses:
    200:
      description: "Success"
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
    401:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: "false"
              message:
                type: string
                example: "Unauthorized"
    500:
      description: "Other errors"
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: "false"
              message:
                type: string
                description: "The error message."

tags:
  - name: "Flight"
    description: "Operations related to flights"