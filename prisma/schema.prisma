datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator kysely {
  provider = "prisma-kysely"

  output    = "../src/lib/db"
  fileName  = "schema.d.ts"
  camelCase = true
}

model app_config {
  id     Int  @id @default(autoincrement())
  config Json @default("{}")
}

model user {
  id           String  @id
  username     String  @unique
  display_name String
  /// @kyselyType('metric' | 'imperial')
  unit         String
  password     String?

  /// @kyselyType('user' | 'admin' | 'owner')
  role String

  oauth_id String?

  sessions          session[]
  seats             seat[]
  visited_countries visited_country[]
}

model flight {
  id        Int     @id @default(autoincrement())
  date      String
  from      String
  to        String
  /// YYYY-MM-DDTHH:mm:ss.sssZ (ISO-8601)
  departure String?
  /// YYYY-MM-DDTHH:mm:ss.sssZ (ISO-8601)
  arrival   String?
  duration  Int?

  flight_number String?
  /// @kyselyType('leisure' | 'business' | 'crew' | 'other')
  flight_reason String?
  /// ICAO airline code
  airline       String?
  /// ICAO type code
  aircraft      String?
  aircraft_reg  String?
  note          String?

  seats seat[]
}

model seat {
  id         Int     @id @default(autoincrement())
  flight_id  Int
  user_id    String?
  guest_name String?

  /// @kyselyType('window' | 'aisle' | 'middle' | 'other')
  seat        String?
  /// Seat number (e.g. 12A)
  seat_number String?
  /// @kyselyType('economy' | 'economy+' | 'business' | 'first' | 'private')
  seat_class  String?

  user   user?  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  flight flight @relation(fields: [flight_id], references: [id], onDelete: Cascade)

  @@unique([flight_id, user_id], map: "seat_user_id_flight_id_key")
  @@unique([flight_id, guest_name], map: "seat_flight_id_guest_name_key")
}

model visited_country {
  id Int @id @default(autoincrement())

  /// ISO 3166-1 numeric code
  code   Int
  /// @kyselyType('lived' | 'visited' | 'layover' | 'wishlist')
  status String
  note   String?

  user_id String
  user    user   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([code, user_id], map: "visited_country_code_user_id_key")
}

model session {
  id         String   @id
  expires_at DateTime @db.Timestamptz
  user_id    String
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
